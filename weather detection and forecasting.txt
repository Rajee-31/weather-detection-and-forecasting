from tkinter import *
from tkinter import messagebox as mb
import requests
from datetime import datetime
import webbrowser

root = Tk()
root.title('Weather Application')
root.configure()
root.geometry('800x950')
global city

def get_weather():
    city = city_input.get()
    api_key = '2fbdfe06f18b72c3e808ee80376641c3'
    url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}'
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        temp = data['main']['temp'] - 273.15
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed'] * 3.6
        epoch_time = data['dt']
        date_time = datetime.fromtimestamp(epoch_time)
        desc = data['weather'][0]['description']
        cloudy = data['clouds']['all']

        timelabel.config(text="Date and Time: " + str(date_time))
        temp_field.delete(0, END)
        temp_field.insert(0, '{:.2f}'.format(temp) + " Celsius")
        pressure_field.delete(0, END)
        pressure_field.insert(0, str(pressure) + " hPa")
        humid_field.delete(0, END)
        humid_field.insert(0, str(humidity) + "%")
        wind_field.delete(0, END)
        wind_field.insert(0, '{:.2f}'.format(wind) + " km/h")
        cloud_field.delete(0, END)
        cloud_field.insert(0, str(cloudy) + "%")
        desc_field.delete(0, END)
        desc_field.insert(0, str(desc))
    else:
        mb.showerror("Error", "City Not Found. Enter a valid city name")
        city_input.delete(0, END)

def reset():
    city_input.delete(0, END)
    temp_field.delete(0, END)
    pressure_field.delete(0, END)
    humid_field.delete(0, END)
    wind_field.delete(0, END)
    cloud_field.delete(0, END)
    desc_field.delete(0, END)
    timelabel.config(text='')

def get_forecast():
    city = city_input.get()
    url1 = f'https://wttr.in/{city}'
    webbrowser.open(url1)

title = Label(root, text='Weather detection and forecast', fg='Black', font=("bold", 15))
label1 = Label(root, text='Enter the City name:', fg="black",font=('bold', 12))

city_input = Entry(root, width=24, fg='red2', font=12, relief=GROOVE)
temp_input = Text(root, width=24, fg='red2', font=12, relief=GROOVE)
pressure_input = Text(root, width=24, fg='red2', font=12, relief=GROOVE)
humid_input = Text(root, width=24, fg='red2', font=12, relief=GROOVE)
wind_input = Text(root, width=24, fg='red2', font=12, relief=GROOVE)
cloud_input = Text(root, width=24, fg='red2', font=12, relief=GROOVE)
desc_input = Text(root, width=24, fg='red2', font=12, relief=GROOVE)
timelabel = Label(root, text='', font=('bold', 14), fg='Black')

btn_submit = Button(root, text='Get Weather', width=10, font=12, bg='lime green', command=get_weather)
btn_forecast = Button(root, text='Weather Forecast', width=14, font=12, bg='lime green', command=get_forecast)
btn_reset = Button(root, text='Reset', font=12, bg='lime green', command=reset)

label2 = Label(root, text="Temperature :", font=('bold', 12))
label3 = Label(root, text="Pressure :", font=('bold', 12))
label4 = Label(root, text="Humidity :", font=('bold', 12))
label5 = Label(root, text="Wind :", font=('bold', 12))
label6 = Label(root, text="Cloudiness :", font=('bold', 12))
label7 = Label(root, text="Description :", font=('bold', 12))

temp_field = Entry(root, width=24, font=11)
pressure_field = Entry(root, width=24, font=11)
humid_field = Entry(root, width=24, font=11)
wind_field = Entry(root, width=24, font=11)
cloud_field = Entry(root, width=24, font=11)
desc_field = Entry(root, width=24, font=11)



title.grid(row=0, column=4)
label1.grid(row=3, column=2, pady=5)
timelabel.grid(row= 3,column=6,pady=5)
btn_submit.grid(row=4, column=4, pady=5)
btn_forecast.grid(row=4, column=6, pady=5)

label2.grid(row=5, column=2, padx=5, pady=5)
label3.grid(row=6, column=2, padx=5, pady=5)
label4.grid(row=7, column=2, padx=5, pady=5)
label5.grid(row=8, column=2, padx=5, pady=5)
label6.grid(row=9, column=2, padx=5, pady=5)
label7.grid(row=10, column=2, padx=5, pady=5)

city_input.grid(row=3, column=4, padx=5, pady=5)
temp_field.grid(row=5, column=4, padx=5, pady=5)
pressure_field.grid(row=6, column=4, padx=5, pady=5)
humid_field.grid(row=7, column=4, padx=5, pady=5)
wind_field.grid(row=8, column=4, padx=5, pady=5)
cloud_field.grid(row=9, column=4, padx=5, pady=5)
desc_field.grid(row=10, column=4, padx=5, pady=5)

btn_reset.grid(row=11, column=4, pady=5)

root.mainloop()